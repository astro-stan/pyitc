---
name: Release

on:
  push:
    tags: [ "v*.*.*" ]

jobs:
  check-conditions:
    name: Check Conditions
    runs-on: ubuntu-latest
    steps:
      - name: Check For Valid Release
        id: check-for-valid-release
        run: |
          if [[ "${{ github.ref_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
            echo "is-release=true" >> $GITHUB_OUTPUT
            if [[ "${{ github.ref_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
                echo "pre-release=false" >> $GITHUB_OUTPUT
            else
                echo "pre-release=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "is-release=false" >> $GITHUB_OUTPUT
          fi
    outputs:
      is-valid-release: ${{ steps.check-for-valid-release.outputs.is-release == 'true' }}
      is-pre-release: ${{ steps.check-for-valid-release.outputs.pre-release == 'true' }}
  build-sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    needs:
    - check-conditions
    if: ${{ needs.check-conditions.outputs.is-valid-release == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          # python-version-file does not seem to support multiple versions
          # definition
          python-version: |
            3.7
            3.8
            3.9
            3.10
            3.11
            3.12
          cache: pip
      - name: Install Nox
        run: pip install nox
      - name: Build sdist
        run: nox --error-on-missing-interpreters -s sdist
      - name: Upload Sdist As Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pyitc-sdist
          path: dist/*.tar.gz
          if-no-files-found: error
          retention-days: 1
  build-wheels:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    needs:
    - check-conditions
    if: ${{ needs.check-conditions.outputs.is-valid-release == 'true' }}
    strategy:
      matrix:
        os: [
          'ubuntu-latest',
          'windows-latest',
          'macos-13', # intel
          'macos-14', # apple silicon
        ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.1
        env:
          # Build for all supported python versions
          CIBW_BUILD: |
            *37*
            *38*
            *39*
            *310*
            *311*
            *312*
          CIBW_BUILD_FRONTEND: build
          CIBW_BUILD_VERBOSITY: 1
          CIBW_TEST_COMMAND: pytest {project}
          CIBW_TEST_REQUIRES: pytest
          # Building for 32-bit Windows is tricky because meson
          # fails when installed on a 64-bit host but finds an x86 python install
          #
          # See: https://github.com/mesonbuild/meson/issues/13008#issuecomment-2033711252
          #
          # Because of this, 32-bit Windows users will need to build from source
          # (using the sdist) but given that Windows 11 does not even offer
          # 32-bit images, this is a pretty niche use case.
          CIBW_ARCHS_WINDOWS: AMD64
          # pp37-win*: see https://github.com/pypa/cibuildwheel/issues/1893
          # pp310-macosx*: (TODO) For some reason it fails with:
          # ```
          # /Users/runner/Library/Caches/cibuildwheel/pypy3.10-v7.3.16-macos_arm64/include/pypy3.10/object.h:66:28: error: redefinition of typedef 'PyTypeObject' is a C11 feature [-Werror,-Wtypedef-redefinition]
          #   typedef struct _typeobject PyTypeObject;
          #   ^
          # /Users/runner/Library/Caches/cibuildwheel/pypy3.10-v7.3.16-macos_arm64/include/pypy3.10/cpyext_object.h:293:3: note: previous definition is here
          # } PyTypeObject;
          # ```
          CIBW_SKIP: pp37-win* pp310-macosx*
        with:
          output-dir: dist
      - name: Upload Wheels As Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pyitc-wheels-${{ matrix.os }}
          path: dist/*.whl
          if-no-files-found: error
          retention-days: 1
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
    - check-conditions
    - build-sdist
    - build-wheels
    if: ${{ needs.check-conditions.outputs.is-valid-release == 'true' }}
    permissions:
      id-token: write # Needed to sign the wheels and sdist
      contents: write # Needed to create the GH release
    steps:
      - name: Download Sdist And Wheels
        uses: actions/download-artifact@v4
        with:
          # name: # Download all
          path: dist/
          merge-multiple: true
      - name: Sign With Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          generate_release_notes: true
          append_body: true
          prerelease: ${{needs.check-conditions.outputs.is-pre-release == 'true' }}
          files: dist/**
